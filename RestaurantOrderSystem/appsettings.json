{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
   "DefaultConnection": "Server=.;Database=RestaurantDB;Trusted_Connection=True" }
}

/*
  Steps:
  0) Create the model in Models folder
      ex. :
      // POCO - Plain Old CLR Object
    public class Product
    {
        [Key] // attribute
        public int Id { get; set; }
        [Required]
        public string Name { get; set; }
        public double Price { get; set; }
        public DateTime ManufactureDate { get; set; } = DateTime.Now;
    }
}
  1) In appsettings.json, add "ConnectionStrings": {
  2) "DefaultConnection": "Server=.;Database=ProductDB;Trusted_Connection=True" }
     Can check in Server Explorer for Data Connections => Microsoft SQL Server, Test Connection
     Database created through server instance 
  3) Add Data folder to our application
  4) Add ApplicationDbContext class to Data folder
  5) ApplicationDbContext class needs to inherit from DbContext
  6) Go to Tools -> NuGet Package Manager and search for Microsoft.EntityFrameworkCore (or otherwise install it)
  7) In ApplicationDbContext class, add
  public DbSet<Product> Products {get;set;} // Creates a DB set with the Product model
    (application mapper), Products is table name
  8) Add "using WebCoreApp.Models;"
  9) Add the following to the class:
          public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options) : base(options)
        {

        }
  Tells us how to connect to the data base and set some options
  Any options we create are applicable to the base
  10) In Program.cs, we need to add the following:
  // Dependency Injection for ApplicationDbContext
    builder.Services.AddDbContext<ApplicationDbContext>(options => options.UseSqlServer(
    builder.Configuration.GetConnectionString("DefaultConnection") // Same name as in appsettings
    )); 
  11) Install Microsoft.EntityFrameworkCore.SqlServer and add using Microsoft.EntityFrameworkCore;
  12) Open Package Manager Console under Tools -> NuGet Package Manager
  13) Install Microsoft.EntityFrameworkCore.Tools
  14) In PM shell, type enable-migration and hit enter ***this should give an error***
  15) In PM shell, type add-migration AddProductToDataBase, where Product is the name of the model
  16) Changes can be made in AddProductToDatabase class, need to enter update-database in PM shell
  17) Database can now be accessed through Microsoft SQL Server Management Studio through default connection
  18) Add MVC controls with views to Controllers folder using Products model
         this will build everything for you
  19) Go to _Layout.cshtml and add
                          <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Products" asp-action="Index">Products</a>
                        </li>
      so you can access the views through the website
*/
// Windows authentication means the user (windows login on your PC) is able to login to the instance